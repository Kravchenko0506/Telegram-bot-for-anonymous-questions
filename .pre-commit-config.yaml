# Pre-commit configuration for Anonymous Questions Bot
# Install with: pip install pre-commit && pre-commit install

repos:
  # Basic code quality checks
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v4.5.0
    hooks:
      - id: trailing-whitespace
      - id: end-of-file-fixer
      - id: check-yaml
      - id: check-added-large-files
        args: ['--maxkb=1000']
      - id: check-merge-conflict
      - id: debug-statements
      - id: check-json
      - id: pretty-format-json
        args: ['--autofix']

  # Python code formatting
  - repo: https://github.com/psf/black
    rev: 23.12.1
    hooks:
      - id: black
        language_version: python3
        args: ['--line-length=120']

  # Import sorting
  - repo: https://github.com/pycqa/isort
    rev: 5.13.2
    hooks:
      - id: isort
        args: ['--profile=black', '--line-length=120']

  # Linting
  - repo: https://github.com/pycqa/flake8
    rev: 6.1.0
    hooks:
      - id: flake8
        args: ['--max-line-length=120', '--ignore=E501,W503,E203']

  # Security checks
  - repo: https://github.com/pycqa/bandit
    rev: 1.7.5
    hooks:
      - id: bandit
        args: ['-r', '.', '--skip=B101,B601']
        exclude: ^tests/

  # Type checking
  - repo: https://github.com/pre-commit/mirrors-mypy
    rev: v1.8.0
    hooks:
      - id: mypy
        args: ['--ignore-missing-imports', '--no-strict-optional']
        additional_dependencies: [types-all]

  # Local hooks for project-specific checks
  - repo: local
    hooks:
      # Quick tests before commit
      - id: quick-tests
        name: Run quick tests
        entry: python run_tests.py quick
        language: system
        pass_filenames: false
        stages: [commit]

      # Security scan before push
      - id: security-tests
        name: Run security tests
        entry: python run_tests.py security
        language: system
        pass_filenames: false
        stages: [push]

      # Configuration validation
      - id: config-check
        name: Validate configuration
        entry: python check_config.py
        language: system
        pass_filenames: false
        files: ^(config\.py|\.env\.example)$

      # Prevent secrets in commit
      - id: check-secrets
        name: Check for secrets
        entry: bash -c 'if grep -r "BOT_TOKEN.*[0-9]" . --exclude-dir=.git --exclude="*.example" --exclude-dir=tests; then echo "‚ùå Bot token found in code!"; exit 1; fi'
        language: system
        pass_filenames: false

# Global configuration
default_stages: [commit]
fail_fast: false

# Exclude patterns
exclude: |
  (?x)^(
    migrations/|
    \.git/|
    \.pytest_cache/|
    __pycache__/|
    \.env$|
    logs/.*\.log$|
    tests/coverage_html/
  )$